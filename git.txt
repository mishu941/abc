#include<stdio.h>
#include<conio.h>
#include<ctype.h>
void FIRST(char);
int count,n=0;
char prodn[10][10],first[10];
int main()
{
	int i,choice;
	char c,ch;
	printf("Enter no of productions:-");
	scanf("%d",&count);
	printf("Enter productions elipson=$");
	for(i=0;i<count;i++)
	{
		scanf("%s%c",prodn[i],&ch);
	}
	do
	{
		n=0;
		printf("Element");
		scanf("%c",&c);
		FIRST(c);
		printf("FIRST(%c)={",c);	
		for(i=0;i<n;i++)
		printf("%c",first[i]);
		printf("}\n");
		printf("Press 1 to continue");
		scanf("%d%c",&choice,&ch);
	}
	while(choice==1);
	return 0;
}
void FIRST(char c)
{
	int j;
	if(!(isupper(c)))
	first[n++]=c;
	for(j=0;j<count;j++)
	{
	if(prodn[j][0]==c)	
	{
		if(prodn[j][2]=='$')
		first[n++]='$';
		else if(islower(prodn[j][2]))
		first[n++]=prodn[j][2];
		else
		FIRST(prodn[j][2]);
	}
	}
}

#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>
int size=0,addr=200;
void insert();
void delet();
void display();
int Search(char lab[]);
struct symboltab
{
	char label[20],symbol[10];
	int addr;
	struct symboltab *next;
};
struct symboltab *first,*last;
int main()
{
	int op;
	int y;
	char la[10];
	do
	{
		printf("SYMBOL TABLE IMPLEMENTATION");
		printf("1.Insert");
		printf("2.Delete");
		printf("3.Display");
		printf("4.Exit");
		printf("Enter your option");
		scanf("%d",&op);
		switch(op)
		{
			case 1:
				insert();
				display();
				break;
			case 2:
				delet();
				display();
				break;
			case 3:
				display();
				break;
			case 4:
				exit(0);
			}
	}while(op<4);
	return 0;
}
void insert()
{
	int n;
	char l[10];
	printf("Enter the label:");
	scanf("%s",l);
	n=Search(l);
	if(n==1)
	printf("Label Exists");
	else
	{
		struct symboltab *p;
		p=malloc(sizeof(struct symboltab));
		strcpy(p->label,l);
		printf("\nEnter the symbol");
		scanf("%s",p->symbol);
		p->addr=addr++;
		p->next=NULL;
		if(size==0)
		{
			first=p;
			last=p;
		}
		else
		{
			last->next=p;
			last=p;
		}
		size++;
	}
		printf("Label Inserted");
}
void display()
{
	int i;
	struct symboltab *p;
	p=first;
	printf("\nLabel\tSymbol\tAddress\n");
	for(i=0;i<size;i++)
	{
		printf("%s\t%s\t%d\n",p->label,p->symbol,p->addr);
		p=p->next;
	}
}
void delet()
{
	int a;
	char l[10];
	struct symboltab *p,*q;
	p=first;
	printf("Enter label to delete");
	scanf("%s",l);
	a=Search(l);
	if(a==0)
	printf("Label Not Found");
	else
	{
		if(strcmp(first->label,l)==0)
		first=first->next;
		else if(strcmp(last->label,l)==0)
		{
			q=p->next;
			while(strcmp(q->label,l)!=0)
			{
				p=p->next;
				q=q->next;
			}
			p->next=NULL;
			last=p;
		}
		else
		{
			q=p->next;
			while(strcmp(q->label,l)!=0)
			{
				p=p->next;
				q=q->next;
			}
			p->next=q->next;
		}
		size--;
		printf("After deletion:-\n");
	}
}
int Search(char lab[])
{
	int i,flag=0;
	struct symboltab *p;
	p=first;
	for(i=0;i<size;i++)
	{
		if(strcmp(p->label,lab)==0)
			flag=1;
			p=p->next;
	}
	return flag;
}

//
#include<stdio.h>
#include<conio.h>
#include<string.h>
int main()
{
	char ch,s[100],string[100],filename[25];
	int i,n,count=0,j=0;
	FILE *fp;
	printf("Enter name of file");
	gets(filename);
	
	fp=fopen(filename,"w");
	printf("Enter data:\n");
	fgets(string,100,stdin);
	fputs(string,fp);
	fclose(fp);
	fp=fopen(filename,"r");
	while((ch=fgetc(fp))!=EOF)
	{
		s[j]=ch;
		j++;
	}
	n=j;
	for(i=0;i<n-1;i++)
	{
		count=1;
		if(s[i])
		{
			for(j=i+1;j<n;j++)
			{
				if(s[i]==s[j])
				{
					count++;
					s[j]='\0';
				}
			}
			printf("%c-->%d\n",s[i],count);
		}
	}
	return 0;
}

#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
int main()
{
    char ch,ch2,str[100],file[20];
    int count=0,check=1;
    FILE *fp;
    printf("Enter file name");
    fgets(file,20,stdin);
    fp=fopen(file,"w");
    fgets(str,100,stdin);
    fputs(str,fp);
    fclose(fp);
    fp=fopen(file,"r");
    while((ch==fgetc(fp))!=EOF)
    {
        /*if(ch=='&' && ch2=='&')
        {
            count++;
            check=1;
        }
        else if(ch=='|' && ch2=='|')
        {
            count++;
            check=1;
        }
        else if(ch=='*' || ch=='+' || ch=='-' || ch=='/' || ch=='&' || ch=='|')
        {
            count++;
        }
        if(check==0 && (ch2=='*' || ch2=='/' || ch2=='+' || ch2=='-' || ch2=='&' || ch2=='|'))
        {
            count++;
        }
        */
        if(ch=='*' || ch=='/' || ch=='+' || ch=='-')
        {
        	count++;
		}
    }
    printf("No of operators: %d",count);
    fclose(fp);
    return 0;
	}


#include<stdio.h>
#include<conio.h>
#include<string.h>
#include<stdlib.h>
int main()
{
    char keyword[32][10]={"auto","double"};
    int count=0,i,flag=0;
    FILE *fp;
    char str[100],file[20],ch;
    printf("Enter file name");
    gets(file);
    fp=fopen(file,"w");
    printf("Enter data in file");
    fgets(str,100,stdin);
    fputs(str,fp);
    fclose(fp);
    fp=fopen(file,"r");
    while((fscanf(fp,"%s",str))!=EOF)
    {
        for(i=0;i<32;i++)
        {
            if(strcmp(str,keyword[i])==0)
            {
                count++;

            }
        }
    }
        printf("Total %d",count);
        fclose(fp);
        return 0;

}


%{
#include<stdio.h>
int v=0,co=0;
%}
%%
[a|i|e|o|u|E|A|I|O|U] {v++;}
[a-z A-Z (^a|i|e|o|u|E|A|I|O|U) ] {co++;}
%%
int main()
{
      yyin=fopen("abc.txt","r");
      yylex();
      printf("\nNumber of Vowels : %d",v);
      printf("\nNumber of Constants : %d",co);
      return 0;
}
int yywrap()
{
      return 1;
}

%{ 
    #include <stdio.h>
    int c=0,w=0,s=0,l=0;
%}
word [^ \t\n,\.:]+
eol [\n]
blank [ ]
%%
{word} {w++;}
{eol} {l++;}
{blank} {s++;}
%%

void main(int argc,char *argv[])
{
yyin=fopen("in.txt","r");
yylex();
 printf("no. of word %d \n",w);
printf("no. of line %d \n",l);
printf("no. of space %d \n",s);
}
 int yywrap()
{ 
return 1;
}


%{
#include<stdio.h>
%}
%%
([a-zA-Z][0-9])+|[a-zA-Z]* {printf("Identifier");}
^[0-9]+ {printf("Invalid identifier");}
%%

int main()
{
yylex();
return 0;
}
int yywrap()
{
return 1;
}

%{
  #include<stdio.h>
%}
%%
[1-9][0-9]{9} {printf("Mobile number valid");}
.* {printf("Invalid mobile number");}
%%
int main()
{
printf("\nEnter mobile number");
yylex();
printf("\n");
return 0;
}

%{
 #include<stdio.h>
%}
%%
http:\/\/[a-z A-Z 0-9]+\.com {printf("Valid URL");}
.* {printf("Invalid URL");}
%%
int yywrap()
{
return 1;
}
int main()
{
printf("Enter URL");
yylex();
return 0;
}